'use strict';

{{
  var STRIP_FUNCTION = /function\s+anonymous\s*\(it[^)]*\)\s*{|return\s+out;\s*}/g
    , VAR_OUT = /var\s+out/
    , OUT_EMPTY_STRING = /out\s*\+=\s*\'\'\s*\+\s*/g;
}}

{{ var name = 'localize_' + it.locale.replace('-','_'); }}
var {{=name}} = function {{=name}}(errors) {
  if (!(errors && errors.length)) return;
  for (var i=0; i<errors.length; i++) {
    var e = errors[i];
    var out;
    switch (e.keyword) {
      {{~ it.messages:msg }}
        {{ if(msg.keyword == 'custom') var custom = msg; }}
        case '{{= msg.keyword }}':
          {{= stripFunction(msg.msgFunc) }}
          break;
      {{~}}
      case 'errorMessage':
        {{=name}}(e.params.errors);
        continue;
      default:
        {{= stripFunction(custom.msgFunc) }}
    }
    e.message = out;
  }
  module.exports = {{=name}};
};

{{
  function stripFunction(code) {
    return code.toString()
            .replace(STRIP_FUNCTION, '')
            .replace(VAR_OUT, 'out')
            .replace(OUT_EMPTY_STRING, 'out += ');
  }
}}
